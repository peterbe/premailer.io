<!DOCTYPE html>
<html ng-app="premailer">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>
    <%= pkg.name %> - <%= pkg.description %>
  </title>
  <link rel="icon" type="image/png" href="/img/mailman32.png">
  <link href='//fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" type="text/css" href="<%= css %>" media="all">
  <!-- <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css"> -->
  <style>
    body {
      padding-top: 30px;
      padding-bottom: 30px;
    }

    .theme-dropdown .dropdown-menu {
      position: static;
      display: block;
      margin-bottom: 20px;
    }

    .theme-showcase > p > .btn {
      margin: 5px 0;
    }

    .theme-showcase .navbar .container {
      width: auto;
    }
  </style>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-94373-18', 'auto');
    ga('send', 'pageview');
  </script>
</head>

<body role="document">

  <!-- Fixed navbar
  <nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/">
          <%= pkg.name %>
        </a>
      </div>
      <div id="navbar" class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
          <li class="active"><a href="#">Home</a></li>
          <li><a href="#about">About</a></li>
          <li><a href="#contact">Contact</a></li>
          <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Dropdown <span class="caret"></span></a>
            <ul class="dropdown-menu" role="menu">
              <li><a href="#">Action</a></li>
              <li><a href="#">Another action</a></li>
              <li><a href="#">Something else here</a></li>
              <li class="divider"></li>
              <li class="dropdown-header">Nav header</li>
              <li><a href="#">Separated link</a></li>
              <li><a href="#">One more separated link</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  -->

  <div class="container theme-showcase" role="main" ng-controller="ConversionCtrl">

    <!-- Main jumbotron for a primary marketing message or call to action -->
    <div class="jumbotron">
      <h1>
        <%= pkg.name %>
      </h1>
      <p>
        <%= pkg.description %>
      </p>
    </div>

    <form ng-submit="start()" ng-cloak>
      <div class="panel">
        <ul class="nav nav-tabs nav-justified">
          <li ng-class="{active: active=='textarea'}">
            <a href="#textarea" ng-click="active='textarea'" data-toggle="tab">Textarea</a>
          </li>
          <li ng-class="{active: active=='upload'}">
            <a href="#upload" ng-click="active='upload'" data-toggle="tab">File upload</a>
          </li>
          <li ng-class="{active: active=='url'}">
            <a href="#url" ng-click="active='url'" data-toggle="tab">URL</a>
          </li>
        </ul>
        <div class="tab-content">
          <div class="tab-pane fade" ng-class="{'active in': active=='textarea'}">
            <textarea class="form-control" rows="12" ng-model="conversion.html"></textarea>
          </div>
          <div class="tab-pane fade" ng-class="{'active in': active=='upload'}">
            <div class="form-group form-group-lg">
              <input type="file" name="file">
            </div>
          </div>
          <div class="tab-pane fade" ng-class="{'active in': active=='url'}">
            <div class="form-group form-group-lg">
              <input class="form-control" type="url" name="url" ng-model="conversion.url"
               placeholder="https://something...">
            </div>
          </div>
        </div>
      </div>

      <div class="form-group">
        <label for="base_url">Base URL (optional)</label>
        <input type="text" ng-model="conversion.base_url" class="form-control" id="base_url" placeholder="e.g. http://example.com">
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="preserve_internal_links">Preserve internal links</label>
        <input type="checkbox" ng-model="conversion.preserve_internal_links" id="preserve_internal_links">
        <p class="help-block">
          Anchor links (e.g. <code>&lt;a href=&quot;#anchor&quot;&gt;</code>)
          stay unchanged.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="preserve_inline_attachments">Preserve inline attachments</label>
        <input type="checkbox" ng-model="conversion.preserve_inline_attachments" id="preserve_inline_attachments">
        <p class="help-block">
          Leave <code>img</code> tags with <code>src</code> value starting
          with <code>cid:</code> as is.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="exclude_pseudoclasses">Exclude pseudo classes</label>
        <input type="checkbox" ng-model="conversion.exclude_pseudoclasses" id="exclude_pseudoclasses">
        <p class="help-block">
          Drop selectors like <code>:hover</code> in style attributes.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="keep_style_tags">Keep <code>style</code> tags</label>
        <input type="checkbox" ng-model="conversion.keep_style_tags" id="keep_style_tags">
        <p class="help-block">
          After having turned every <code>style</code> tag's content into
          inline elements, should it leave the <code>style</code> tag in the HTML document.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="include_star_selectors">Include star selectors</label>
        <input type="checkbox" ng-model="conversion.include_star_selectors" id="include_star_selectors">
        <p class="help-block">
          Whether any selector containing a <code>*</code> should be included.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="remove_classes">Remove classes</label>
        <input type="checkbox" ng-model="conversion.remove_classes" id="remove_classes">
        <p class="help-block">
          Since <code>class</code> attributes on nodes should no longer be
          necessary, we can remove them afterwards.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="strip_important">Strip <code>!important</code></label>
        <input type="checkbox" ng-model="conversion.strip_important" id="strip_important">
        <p class="help-block">
          Remove all <code>!important</code> markers on CSS selector values.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="external_styles">External styles</label>
        <textarea class="form-control" rows="2" ng-model="conversion.external_styles" id="external_styles"></textarea>
        <p class="help-block">
          Additional CSS style sheet URLs to load in. One per line.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="base_path">Base path</label>
        <input class="form-control" ng-model="conversion.base_path" id="base_path">
        <p class="help-block">
          If using <b>External styles</b> above, this sets an extra prefix to each
          external style line if it's not an absolute URL.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="css_text">CSS text</label>
        <textarea class="form-control" rows="2" ng-model="conversion.css_text" id="css_text"></textarea>
        <p class="help-block">
          Similar to <b>External styles</b> above but your own free-text chunk of extra CSS.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="method">Method</label><br>
        <input type="radio" ng-model="conversion.method" value="html"> HTML &nbsp;
        <input type="radio" ng-model="conversion.method" value="xml"> XML
        <p class="help-block">
          Determines which parser <code>lxml</code> will use to parse and stringify the document.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="disable_basic_attributes" title="It should be called 'Basic attributes to disable'">Disable basic attributes</label>
        <textarea class="form-control" rows="2" ng-model="conversion.disable_basic_attributes" id="disable_basic_attributes"></textarea>
        <p class="help-block">
          Enter selector keys you do <b>not</b> want to become basic inline attributes.
          For example <code>bgcolor</code>. One per line.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="disable_validation">Disable validation</label>
        <input type="checkbox" ng-model="conversion.disable_validation" id="disable_validation">
        <p class="help-block">
          Sent to <a href="https://pypi.python.org/pypi/cssutils/"><code>cssutils</code></a> when it parses the found CSS strings.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="cache_css_parsing">Cache CSS parsing</label>
        <input type="checkbox" ng-model="conversion.cache_css_parsing" id="cache_css_parsing">
        <p class="help-block">
          Relevant if you send the same block of CSS repeatedly into <code>cssutils</code> to be parsed.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="disable_leftover_css">Disable leftover CSS</label>
        <input type="checkbox" ng-model="conversion.disable_leftover_css" id="disable_leftover_css">
        <p class="help-block">
          If you have no <code>&lt;head&gt;</code> and don't want it to try to insert the
          remaining style into the head.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="align_floating_images">Align floating images</label>
        <input type="checkbox" ng-model="conversion.align_floating_images" id="align_floating_images">
        <p class="help-block">
          Images with <code>float:left</code> or <code>float:right</code> gets
          an extra <code>align=&quot;left&quot;</code> and
          <code>align=&quot;right&quot;</code> attribute.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="remove_unset_properties">Remove unset properties</label>
        <input type="checkbox" ng-model="conversion.remove_unset_properties" id="remove_unset_properties">
        <p class="help-block">
          For CSS property/value pairs with a value of <code>unset</code> the
          property is removed.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="allow_network">Allow network</label>
        <input type="checkbox" ng-model="conversion.allow_network" id="allow_network">
        <p class="help-block">
          Whether or not it should be allowed to download external stylesheets
          from the network.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="capitalize_float_margin">Capitalize <code>float</code> and <code>margin</code></label>
        <input type="checkbox" ng-model="conversion.capitalize_float_margin" id="capitalize_float_margin">
        <p class="help-block">
          Outlook.com struggles with selector keys like <code>float</code> and
          <code>margin-*</code> unless they're capitalized.
        </p>
      </div>
      <div class="form-group" ng-show="advancedMode">
        <label for="preserve_handlebar_syntax">Preserve Handlebar syntax</label>
        <input type="checkbox" ng-model="conversion.preserve_handlebar_syntax" id="preserve_handlebar_syntax">
        <p class="help-block">
          Preserve things like <code>&lt;a href=&quot;\{\{ data | default: &quot;Test &amp; &lt;code&gt;&quot; \}\}&quot;&gt;&lt;/a&gt;</code>
        </p>
      </div>
      <p>
        <button class="btn btn-lg btn-success" type="button" role="button" ng-click="start()" ng-disabled="converting">
          <i class="fa fa-cog fa-spin" ng-if="converting"></i>
          <span ng-if="converting">Converting</span>
          <span ng-if="!converting">Convert!</span>
        </button>
        <button class="btn btn-primary" type="button" role="button" ng-click="advancedMode=!advancedMode" ng-disabled="converting">
          <span ng-if="!advancedMode">Advanced options</span>
          <span ng-if="advancedMode">Hide advanced options</span>
        </button>
      </p>
    </form>

    <div class="alert alert-danger" ng-repeat="error in conversionErrors" ng-cloak>
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true" ng-click="removeConversionError(error)">&times;</button>
      <strong>Oh snap!</strong>
      <br> {{ error }}
    </div>

    <div id="results" class="panel" ng-if="results" ng-cloak>
      <div class="page-header">
        <h1>Results</h1>
      </div>

      <ul class="nav nav-tabs nav-justified">
        <li ng-class="{active: activeResult=='html'}">
          <a href="" ng-click="setActiveResult('html')" data-toggle="tab">HTML</a>
        </li>
        <li ng-class="{active: activeResult=='raw'}">
          <a href="" ng-click="setActiveResult('raw')" data-toggle="tab">Raw HTML</a>
        </li>
        <li ng-class="{active: activeResult=='preview'}">
          <a href="" ng-click="setActiveResult('preview')" data-toggle="tab">Preview</a>
        </li>
      </ul>

      <button type="button" class="btn btn-warning btn-block" ng-click="toggleShowWarnings()">
        <span ng-if="showWarnings">Hide</span>
        <span ng-if="!showWarnings">Show</span>
        <code>cssutils</code>'s <b>{{ ::countWarnings(results.warnings) }}</b> warnings
      </button>

      <div ng-show="showWarnings">
        <pre>{{ ::results.warnings }}</pre>
      </div>

      <div class="tab-content">
        <div class="tab-pane fade" ng-class="{'active in': activeResult=='html'}">
          <div hljs source="results.html"></div>
        </div>
      </div>

      <div class="tab-content">
        <div class="tab-pane fade" ng-class="{'active in': activeResult=='raw'}">
          <pre>{{ ::results.html }}</pre>
        </div>
      </div>

      <div class="tab-content">
        <div class="tab-pane fade" ng-class="{'active in': activeResult=='preview'}">
          <iframe style="width:100%;min-height:400px"></iframe>
        </div>
      </div>

      <p>That took a whopping
        <b ng-if="results.took <= 1000">{{ results.took | number:1 }} milliseconds</b>
        <b ng-if="results.took > 1000">{{ results.took / 1000 | number:1 }} seconds</b> to convert.
        <br> The resulting HTML is <b>{{ results.html.length | filesize }}</b>.
      </p>

    </div><!-- /results -->

    <div id="server-error" class="alert alert-danger" ng-if="serverError" ng-cloak>
      <h2>Server Error</h2>
      <p>
        Something horrible happened. I think.
      </p>
      <p>
        Basically, we weren't even able to make a server query.
      </p>
      <pre>{{ serverError }}</pre>
    </div><!-- server-error -->

    <div id="about" class="panel" ng-if="!results && !serverError" style="margin-top: 80px;">
      <div class="page-header">
        <h2>About this web app</h2>
        <p>
          <a href="https://github.com/peterbe/premailer">Premailer</a> is <b>a
          Python library</b> based on <code>libxml</code> which can <b>analyze a
          HTML document</b> and <b>extract its CSS style sheets</b> and then for all
          CSS seletors defined, it finds the DOM nodes and puts <b><code>style</code>
          attributes</b> in instead.
        </p>
        <p>
          This website is an example implementation of that library that you
          can test in a browser without having to install anything.
        </p>
        <p style="font-weight:bold">
          Read the original blog post about this site:
          <a href="https://www.peterbe.com/plog/premailer.io">https://www.peterbe.com/plog/premailer.io</a>
        </p>
      </div>
    </div><!-- About -->

  <!-- </div> -->

  <footer class="footer">
    <p>&copy; Premailer.io by <a href="https://www.peterbe.com">@peterbe</a>
    &bull;
    <a href="https://github.com/peterbe/premailer.io"
       title="Issues, Pull Requests delightfully welcome">Code on GitHub</a>
    </p>
  </footer>

  </div>
  <!-- /container -->
  <script type="text/javascript" src="<%= js %>"></script>
</body>

</html>
